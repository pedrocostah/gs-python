voluntarios = []
mensagens_contato = []

def validar_email(email):
    return "@" in email and "." in email and len(email) >= 6

def validar_telefone(telefone):
    return telefone.isdigit() and len(telefone) >= 8

def cadastrar_voluntario():
    print("\n--- Cadastro de Volunt√°rio ---")
    nome = input("Nome completo: ").strip()
    email = input("E-mail: ").strip()
    telefone = input("Telefone: ").strip()
    senha = input("Crie uma senha: ").strip()

    if not nome or not validar_email(email) or not validar_telefone(telefone) or not senha:
        print("Erro: dados inv√°lidos.")
        return

    for v in voluntarios:
        if v["email"] == email or v["telefone"] == telefone:
            print("Erro: e-mail ou telefone j√° cadastrado.")
            return

    voluntarios.append({"nome": nome, "email": email, "telefone": telefone, "senha": senha})
    print("‚úÖ Cadastro feito com sucesso!")

def enviar_contato():
    print("\n--- Contato ---")
    nome = input("Nome: ").strip()
    email = input("Email: ").strip()
    mensagem = input("Mensagem: ").strip()

    if not nome or not validar_email(email) or not mensagem:
        print("Erro: dados inv√°lidos.")
        return

    mensagens_contato.append({"nome": nome, "email": email, "mensagem": mensagem})
    print("‚úÖ Mensagem enviada com sucesso!")

def informacoes_doacao():
    print("\n--- DOA√á√ÉO EM DINHEIRO VIA PIX ---")
    print("Contribua com a nossa causa via PIX. Sua doa√ß√£o ser√° destinada diretamente √†s v√≠timas de desastres naturais.")
    print("Chave PIX: 123.456.789.00")
    print("Fa√ßa seu PIX agora mesmo e ajude quem precisa.")
    print("N√£o h√° valores m√≠nimos ou m√°ximos. Cada contribui√ß√£o conta!")

    print("\n--- DOA√á√ÉO DE MANTIMENTOS E ROUPAS ---")
    print("Doe mantimentos e roupas usadas em bom estado para quem precisa.")

    print("\nüìç Pontos de Coleta:")
    print("Centro de Coleta 1: Rua das Flores, 123 - Centro")
    print("Centro de Coleta 2: Av. Brasil, 456 - Bairro Alto")
    print("Centro de Coleta 3: Rua Vit√≥ria, 789 - Zona Norte")

def como_pedir_socorro():
    print("\n=== COMO PEDIR AJUDA EM CASO DE EMERG√äNCIA ===")
    print("\nüÜò Em Caso de Emerg√™ncia, Aja Rapidamente")
    print("Se voc√™ estiver em uma situa√ß√£o de risco, siga as orienta√ß√µes abaixo para pedir ajuda imediatamente.")

    print("\nüìû Contatos de Emerg√™ncia Globais")
    print("‚Ä¢ Emerg√™ncias Gerais: 112 (UE, Canad√°, Austr√°lia, etc.)")
    print("‚Ä¢ EUA/Canad√°: 911")
    print("‚Ä¢ Brasil: 190 (Pol√≠cia), 192 (SAMU), 193 (Bombeiros)")
    print("‚Ä¢ Defesa Civil: 199 (Brasil), 112 (UE)")
    print("‚Ä¢ Emerg√™ncias M√©dicas Globais: 112")
    print("‚Ä¢ Emerg√™ncias Ambientais: 121 (alguns pa√≠ses)")

    print("\nüìå Dicas para Pedir Socorro")
    print("‚Ä¢ Seja claro: tipo de emerg√™ncia, local, nome.")
    print("‚Ä¢ Mantenha a calma e fale devagar.")
    print("‚Ä¢ Use apps oficiais com localiza√ß√£o.")
    print("‚Ä¢ Em desastres, siga rotas seguras e fontes confi√°veis.")

    print("\n‚ö†Ô∏è Emerg√™ncias Comuns e A√ß√µes:")
    print("‚Ä¢ Inc√™ndios: Saia r√°pido e ligue 193. Evite elevador.")
    print("‚Ä¢ Acidentes: Chame 192, sinalize, n√£o mova v√≠timas.")
    print("‚Ä¢ Desastres: Procure √°reas altas e siga instru√ß√µes da Defesa Civil.")

    print("\nüåê ONGs Mundiais")
    print("‚Ä¢ Cruz Vermelha Internacional - www.ifrc.org")
    print("‚Ä¢ M√©dicos Sem Fronteiras - www.msf.org / www.msf.org/contact-us")

def monitoramento_tempo_real():
    print("\n--- MONITORAMENTO EM TEMPO REAL ---")
    print("üåä Enchente - Ir√£")
    print("üî• Inc√™ndio Florestal - Camar√µes")
    print("üåç Tremor de Terra - Argentina")

def faq():
    print("\n=== FAQ - PERGUNTAS FREQUENTES ===")

    perguntas_respostas = [
        ("Como a plataforma ajuda durante eventos extremos?",
         "Nossa plataforma oferece monitoramento em tempo real das √°reas afetadas, um sistema de doa√ß√µes e voluntariado, um chatbot inteligente para orienta√ß√£o, contato de emerg√™ncia e informa√ß√µes sobre recursos e abrigos dispon√≠veis na regi√£o."),
        ("Como funciona o chatbot integrado?",
         "O chatbot utiliza intelig√™ncia artificial para oferecer orienta√ß√µes sobre preven√ß√£o, primeiros socorros e informa√ß√µes espec√≠ficas para cada tipo de desastre, auxiliando a popula√ß√£o antes, durante e ap√≥s os eventos extremos. Basta clicar no √≠cone de di√°logo na parte inferior √† direita da p√°gina."),
        ("Como s√£o gerenciados os abrigos e recursos?",
         "A plataforma permite que autoridades, equipes de resgate e v√≠timas visualizem em tempo real a disponibilidade de abrigos, recursos essenciais e status das opera√ß√µes, facilitando a tomada de decis√µes r√°pidas e eficazes."),
        ("Como posso ajudar as v√≠timas?",
         "Voc√™ pode doar qualquer quantia em dinheiro via PIX, mantimentos como roupas e alimentos n√£o perec√≠veis ou se voluntariar ajudando abrigos e equipes de triagem."),
        ("Quais tipos de eventos extremos s√£o monitorados?",
         "A plataforma monitora diversos eventos, incluindo chuvas intensas, tremores de terra, inc√™ndios florestais e enchentes, utilizando dados de sat√©lites e sensores IoT."),
        ("O que fazer em casos de emerg√™ncia?",
         "Na p√°gina inicial, clique em 'Pedir socorro'; a p√°gina contar√° com diversos telefones de emerg√™ncia e algumas dicas do que fazer nesses casos.")
    ]

    for pergunta, resposta in perguntas_respostas:
        print(f"\n‚ùì {pergunta}")
        print(f"‚û°Ô∏è  {resposta}")

def recursos_e_abrigos_interativo():
    print("\n--- RECURSOS ESSENCIAIS DISPON√çVEIS ---")
    recursos = [
        "√Ågua pot√°vel: Distribui√ß√£o em pontos de apoio e abrigos.",
        "Alimentos n√£o perec√≠veis: Kits de emerg√™ncia para fam√≠lias afetadas.",
        "Energia el√©trica emergencial: Geradores e pain√©is solares port√°teis.",
        "Atendimento m√©dico: Postos m√≥veis de primeiros socorros e equipes de sa√∫de.",
        "Produtos de higiene: Kits de higiene pessoal e limpeza.",
        "Assist√™ncia psicol√≥gica: Apoio presencial e remoto para afetados.",
        "Comunica√ß√£o: Pontos de Wi-Fi e telefonia emergencial em abrigos."
    ]
    for recurso in recursos:
        print(f"‚úîÔ∏è {recurso}")

    print("\n--- LISTA DE ABRIGOS TEMPOR√ÅRIOS DISPON√çVEIS ---")
    abrigos = [
        {"nome": "Escola Municipal Esperan√ßa", "endereco": "Rua das Flores, 123, Centro", "capacidade": "120 pessoas", "status": "Dispon√≠vel", "contato": "(11) 99999-0001"},
        {"nome": "Gin√°sio Poliesportivo Vida", "endereco": "Av. das Na√ß√µes, 456, Bairro Novo", "capacidade": "200 pessoas", "status": "Quase lotado", "contato": "(11) 99999-0002"},
        {"nome": "Igreja S√£o Jo√£o", "endereco": "Pra√ßa da Paz, 789, Vila Verde", "capacidade": "80 pessoas", "status": "Dispon√≠vel", "contato": "(11) 99999-0003"},
        {"nome": "Centro Comunit√°rio Uni√£o", "endereco": "Rua do Sol, 321, Jardim Luz", "capacidade": "60 pessoas", "status": "Lotado", "contato": "(11) 99999-0004"}
    ]

    for i, abrigo in enumerate(abrigos, 1):
        print(f"{i}. {abrigo['nome']} ({abrigo['status']})")

    opcao = input("Selecione um abrigo para ver mais detalhes (ou digite 0 para voltar): ").strip()

    if opcao.isdigit():
        indice = int(opcao)
        if indice == 0:
            return
        elif 1 <= indice <= len(abrigos):
            a = abrigos[indice - 1]
            print(f"\nüè† Nome: {a['nome']}")
            print(f"üìç Endere√ßo: {a['endereco']}")
            print(f"üë• Capacidade: {a['capacidade']}")
            print(f"üìä Status: {a['status']}")
            print(f"üìû Contato: {a['contato']}")
        else:
            print("‚ùå Op√ß√£o inv√°lida.")
    else:
        print("‚ùå Entrada inv√°lida. Digite apenas n√∫meros.")

def chatbot():
    print("\n--- CHATBOT ---")
    print("ü§ñ Converse com nosso assistente virtual:")
    print("üîó https://t.me/SOSDesastresChatbot")

def quem_somos():
    print("\n--- QUEM SOMOS ---")
    membros = [
        ("Pedro Henrique Costa", "RM559932", "https://linkedin.com/in/pedrocostahch", "https://github.com/pedrocostah"),
        ("J√∫lia Menezes", "RM565568", "https://linkedin.com/in/julia-menezesf", "https://github.com/juliamenezesf")
    ]
    for nome, rm, linkedin, github in membros:
        print(f"\nüë§ {nome}\nüéì RM: {rm}\nüîó LinkedIn: {linkedin}\nüíª GitHub: {github}")

def menu():
    while True:
        print("\n=== SOS DESASTRES NATURAIS ===")
        print("1 - Fazer uma doa√ß√£o")
        print("2 - Como pedir socorro")
        print("3 - Seja um volunt√°rio")
        print("4 - Monitoramento em tempo real")
        print("5 - Enviar mensagem de contato")
        print("6 - FAQ - Perguntas Frequentes")
        print("7 - Recursos e Abrigos")
        print("8 - Chatbot Inteligente (Telegram)")
        print("9 - Quem Somos")
        print("0 - Sair")
        opcao = input("Escolha uma op√ß√£o: ").strip()

        if opcao == "1":
            informacoes_doacao()
        elif opcao == "2":
            como_pedir_socorro()
        elif opcao == "3":
            cadastrar_voluntario()
        elif opcao == "4":
            monitoramento_tempo_real()
        elif opcao == "5":
            enviar_contato()
        elif opcao == "6":
            faq()
        elif opcao == "7":
            recursos_e_abrigos_interativo()
        elif opcao == "8":
            chatbot()
        elif opcao == "9":
            quem_somos()
        elif opcao == "0":
            print("‚úÖ Obrigado por usar o SOS Desastres Naturais.")
            break
        else:
            print("‚ùå Op√ß√£o inv√°lida. Tente novamente.")

if __name__ == "__main__":
    menu()
